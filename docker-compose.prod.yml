services:
  db:
    image: postgres:16-alpine
    container_name: dreamferret-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./server
    container_name: dreamferret-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: ${DATABASE_URL}
      BASE_URL: ${BASE_URL:-http://localhost}
    volumes:
      - uploads:/app/uploads
    expose:
      - "5000"
    restart: unless-stopped

  frontend:
    build:
      context: ./client
    container_name: dreamferret-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata:
  uploads:
